!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS	defines.h	80;"	d
ARITHMETIC_TYPE	defines.h	51;"	d
AT_LOWER	defines.h	57;"	d
AT_UPPER	defines.h	58;"	d
AT_ZERO	defines.h	60;"	d
B	pbeampp.c	24;"	d	file:
BASIC	defines.h	56;"	d
BASKET	pbeampp.c	/^} BASKET;$/;"	t	typeref:struct:basket	file:
BIGM	mcflimit.h	26;"	d
DEBUG	psimplex.c	23;"	d	file:
DOWN	defines.h	64;"	d
FIXED	defines.h	55;"	d
FREE	defines.h	95;"	d
Get_Time	implicit.c	/^double Get_Time( void  ) $/;"	f
K	pbeampp.c	23;"	d	file:
MAX	defines.h	85;"	d
MAX_ART_COST	defines.h	50;"	d
MAX_NB_ITERATIONS_LARGE_NET	mcflimit.h	35;"	d
MAX_NB_ITERATIONS_SMALL_NET	mcflimit.h	34;"	d
MAX_NB_TRIPS_FOR_SMALL_NET	mcflimit.h	29;"	d
MAX_NEW_ARCS_LARGE_NET	mcflimit.h	32;"	d
MAX_NEW_ARCS_SMALL_NET	mcflimit.h	31;"	d
NULL	defines.h	75;"	d
REPORT	mcf.c	25;"	d	file:
SET_ZERO	defines.h	90;"	d
SPEC_STATIC	mcflimit.h	43;"	d
STRECHT	mcflimit.h	27;"	d
TEST_MIN	pbla.c	29;"	d	file:
UNBOUNDED	defines.h	48;"	d
UP	defines.h	63;"	d
ZERO	defines.h	49;"	d
_DEFINES_H	defines.h	24;"	d
_IMPLICIT_H	implicit.h	23;"	d
_MCFUTIL_H	mcfutil.h	24;"	d
_MCF_H	mcf.h	24;"	d
_MCF_LIMITS_H	mcflimit.h	23;"	d
_OUTPUT_H	output.h	24;"	d
_PBEAMPP_H	pbeampp.h	24;"	d
_PBLA_H	pbla.h	24;"	d
_PFLOWUP_H	pflowup.h	24;"	d
_PROTOTYP_H	prototyp.h	24;"	d
_PROTO_	prototyp.h	30;"	d
_PROTO_	prototyp.h	32;"	d
_PSIMPLEX_H	psimplex.h	24;"	d
_PSTART_H	pstart.h	24;"	d
_READMIN_H	readmin.h	24;"	d
_TREEUP_H	treeup.h	24;"	d
a	pbeampp.c	/^    arc_t *a;$/;"	m	struct:basket	file:
abs_cost	pbeampp.c	/^    cost_t abs_cost;$/;"	m	struct:basket	file:
arc	defines.h	/^struct arc$/;"	s
arc_p	defines.h	/^typedef struct arc *arc_p;$/;"	t	typeref:struct:arc
arc_t	defines.h	/^typedef struct arc arc_t;$/;"	t	typeref:struct:arc
arc_tmp	defines.h	/^  arc_p arc_tmp;$/;"	m	struct:node
arcs	defines.h	/^  arc_p arcs, stop_arcs;$/;"	m	struct:network
basic_arc	defines.h	/^  arc_p basic_arc; $/;"	m	struct:node
basket	pbeampp.c	/^static BASKET basket[B+K+1];$/;"	v	file:
basket	pbeampp.c	/^typedef struct basket$/;"	s	file:
basket_size	pbeampp.c	/^static long basket_size;$/;"	v	file:
bea_is_dual_infeasible	pbeampp.c	/^int bea_is_dual_infeasible( arc_t *arc, cost_t red_cost )$/;"	f
bigM	defines.h	/^  long bigM;$/;"	m	struct:network
bound_exchanges	defines.h	/^  long bound_exchanges;$/;"	m	struct:network
checksum	defines.h	/^  long checksum;$/;"	m	struct:network
child	defines.h	/^  node_p child;$/;"	m	struct:node
clustfile	defines.h	/^  char clustfile[200];$/;"	m	struct:network
cost	defines.h	/^  cost_t cost;$/;"	m	struct:arc
cost	pbeampp.c	/^    cost_t cost;$/;"	m	struct:basket	file:
cost_t	defines.h	/^typedef long cost_t;$/;"	t
depth	defines.h	/^  long depth; $/;"	m	struct:node
dual_feasible	mcfutil.c	/^long dual_feasible( network_t *net )$/;"	f
dual_unbounded	defines.h	/^  long dual_unbounded;$/;"	m	struct:network
dummy_arcs	defines.h	/^  arc_p dummy_arcs, stop_dummy; $/;"	m	struct:network
eps	defines.h	/^  long eps;$/;"	m	struct:network
feas_tol	defines.h	/^  long feas_tol;$/;"	m	struct:network
feasible	defines.h	/^  long feasible;$/;"	m	struct:network
firstin	defines.h	/^  arc_p firstout, firstin;$/;"	m	struct:node
firstout	defines.h	/^  arc_p firstout, firstin;$/;"	m	struct:node
flow	defines.h	/^  flow_t flow;$/;"	m	struct:arc
flow	defines.h	/^  flow_t flow;$/;"	m	struct:node
flow_cost	mcfutil.c	/^double flow_cost( network_t *net )$/;"	f
flow_org_cost	mcfutil.c	/^double flow_org_cost( network_t *net )$/;"	f
flow_t	defines.h	/^typedef long flow_t;$/;"	t
getfree	mcfutil.c	/^long getfree( $/;"	f
global_opt	mcf.c	/^long global_opt( void )$/;"	f
group_pos	pbeampp.c	/^static long group_pos;$/;"	v	file:
head	defines.h	/^  node_p tail, head;$/;"	m	struct:arc
ident	defines.h	/^  int ident;$/;"	m	struct:arc
ignore_impl	defines.h	/^  cost_t ignore_impl;$/;"	m	struct:network
initialize	pbeampp.c	/^static long initialize = 1;$/;"	v	file:
inputfile	defines.h	/^  char inputfile[200];$/;"	m	struct:network
insert_new_arc	implicit.c	/^void insert_new_arc( arc_t *new, long newpos, node_t *tail, node_t *head,$/;"	f
iterations	defines.h	/^  long iterations;$/;"	m	struct:network
m	defines.h	/^  long max_m, m, m_org, m_impl;$/;"	m	struct:network
m_impl	defines.h	/^  long max_m, m, m_org, m_impl;$/;"	m	struct:network
m_org	defines.h	/^  long max_m, m, m_org, m_impl;$/;"	m	struct:network
main	mcf.c	/^int main( int argc, char *argv[] )$/;"	f
max_m	defines.h	/^  long max_m, m, m_org, m_impl;$/;"	m	struct:network
max_new_m	defines.h	/^  long max_residual_new_m, max_new_m;$/;"	m	struct:network
max_residual_new_m	defines.h	/^  long max_residual_new_m, max_new_m;$/;"	m	struct:network
n	defines.h	/^  long n, n_trips;$/;"	m	struct:network
n_trips	defines.h	/^  long n, n_trips;$/;"	m	struct:network
net	mcf.c	/^network_t net;$/;"	v
network	defines.h	/^typedef struct network$/;"	s
network_t	defines.h	/^} network_t;$/;"	t	typeref:struct:network
nextin	defines.h	/^  arc_p nextout, nextin;$/;"	m	struct:arc
nextout	defines.h	/^  arc_p nextout, nextin;$/;"	m	struct:arc
node	defines.h	/^struct node$/;"	s
node_p	defines.h	/^typedef struct node *node_p;$/;"	t	typeref:struct:node
node_t	defines.h	/^typedef struct node node_t;$/;"	t	typeref:struct:node
nodes	defines.h	/^  node_p nodes, stop_nodes;$/;"	m	struct:network
nr_group	pbeampp.c	/^static long nr_group;$/;"	v	file:
number	defines.h	/^  int number;$/;"	m	struct:node
opt_tol	defines.h	/^  long opt_tol;$/;"	m	struct:network
optcost	defines.h	/^  double optcost;  $/;"	m	struct:network
org_cost	defines.h	/^  cost_t org_cost;$/;"	m	struct:arc
orientation	defines.h	/^  int orientation;$/;"	m	struct:node
perm	pbeampp.c	/^static BASKET *perm[B+K+1];$/;"	v	file:
pert_val	defines.h	/^  long pert_val;$/;"	m	struct:network
perturbed	defines.h	/^  long perturbed;$/;"	m	struct:network
potential	defines.h	/^  cost_t potential; $/;"	m	struct:node
pred	defines.h	/^  node_p pred;$/;"	m	struct:node
price_out_impl	implicit.c	/^long price_out_impl( network_t *net )$/;"	f
primal_bea_mpp	pbeampp.c	/^arc_t *primal_bea_mpp( long m,  arc_t *arcs, arc_t *stop_arcs, $/;"	f
primal_feasible	mcfutil.c	/^long primal_feasible( network_t *net )$/;"	f
primal_iminus	pbla.c	/^node_t *primal_iminus( $/;"	f
primal_net_simplex	psimplex.c	/^long primal_net_simplex( network_t *net )$/;"	f
primal_start_artificial	pstart.c	/^long primal_start_artificial( network_t *net )$/;"	f
primal_unbounded	defines.h	/^  long primal_unbounded;$/;"	m	struct:network
primal_update_flow	pflowup.c	/^void primal_update_flow( $/;"	f
read_min	readmin.c	/^long read_min( network_t *net )$/;"	f
refresh_neighbour_lists	mcfutil.c	/^void refresh_neighbour_lists( network_t *net )$/;"	f
refresh_potential	mcfutil.c	/^long refresh_potential( network_t *net )$/;"	f
replace_weaker_arc	implicit.c	/^void replace_weaker_arc( network_t *net, arc_t *new, node_t *tail, node_t *head,$/;"	f
resize_prob	implicit.c	/^long resize_prob( network_t *net )$/;"	f
sibling	defines.h	/^  node_p sibling;$/;"	m	struct:node
sibling_prev	defines.h	/^  node_p sibling_prev;     $/;"	m	struct:node
sort_basket	pbeampp.c	/^void sort_basket( long min, long max )$/;"	f
stop_arcs	defines.h	/^  arc_p arcs, stop_arcs;$/;"	m	struct:network
stop_dummy	defines.h	/^  arc_p dummy_arcs, stop_dummy; $/;"	m	struct:network
stop_nodes	defines.h	/^  node_p nodes, stop_nodes;$/;"	m	struct:network
suspend_impl	implicit.c	/^long suspend_impl( network_t *net, cost_t threshold, long all )$/;"	f
tail	defines.h	/^  node_p tail, head;$/;"	m	struct:arc
time	defines.h	/^  int time;$/;"	m	struct:node
update_tree	treeup.c	/^void update_tree( $/;"	f
wall_time	implicit.c	/^static double wall_time = 0; $/;"	v	file:
write_circulations	output.c	/^long write_circulations($/;"	f
